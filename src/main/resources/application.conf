akka {
  log-dead-letters = 1000
  log-dead-letters-during-shutdown = off
  akka.log-config-on-start = on
 # loglevel = "DEBUG"
  loglevel = "INFO"

  persistence {
    journal {
      plugin = "akka.persistence.journal.leveldb"
      leveldb.dir = "target/reactive/journal"
    }
    snapshot-store {
      plugin = "akka.persistence.snapshot-store.local"
      local.dir = "target/reactive/snapshots"
    }
  }
  actor {
       warn-about-java-serializer-usage = false
       akka.actor.allow-java-serialization = off
       log-dead-letters-during-shutdown = off
       serializers {
         jackson-json = "akka.serialization.jackson.JacksonJsonSerializer"
       }
       serialization-bindings {
          "reactive.JacksonSerializable" = jackson-json
       }
       debug {
         # enable DEBUG logging of unhandled messages
         unhandled = on
         # enable DEBUG logging of subscription changes on the eventStream
         event-stream = off

         lifecycle = off
       }
  }
}

reactive {

    system {
        shelf-manager-dispatcher {
            # shelf manager uses a custom priority mailbox
            mailbox-type = "reactive.storage.ShelfManagerPriorityMailbox"
        }
    }

    coordinator {
        initialization-time-millis = 300
        # coordinator sends status update requests regularly to all registered components and report to log if their state is not healthy.
        heart-beat-schedule-millis = 2000
    }
    customer {
        # number of orders Customer actor will stream to OrderProcessor per second
        max-orders-per-second = 10
        # modifies the shelf life of the orders on file, to help simulate faster expiring products. default is 1.
        # 0.5 would reduce the shelf life by half. Must be positive float
        shelf-life-multiplier = 0.1
        # Deliveries received below this threshold (milliseconds) from the order creation, will be tipped generously
        customer-happiness-in-millis-threshold = 4000
        on-time-delivery-recommended-tip = 10
        late-delivery-recommended-tip = 5
        simulation-order-file-path = "./src/main/resources/orders.json"
    }
    orderProcessor {
    }
    orderMonitor {
        maximum-order-life-cycle-cache-size = 200
        # order monitor takes a snapshot of its state after receiving this many events. This helps speed up recovery of state after restart.
        maximum-events-without-checkpoint = 100
        # shuts down the system gracefully after this much duration without any order activity
        inactivity-shutdown-timer-delay-millis = 5000
    }
    kitchen {
        # timer for kitchen to evaluate state to transition from suspended state to active state
        suspension-timer-millis = 100
        # kitchen wants to go to brief suspension after receiving this many number of orders briefly to get updates of availability from
        # shelf manager as well as courier dispatcher
        maximum-number-of-orders-before-suspension = 3
    }
    shelfManager {
        # shelf manager attempts to swap pairs of products from overflow shelf and corresponding temperature sensitive shelf
        # if it will enhance the likelyhood of a product nearing shelf-life expiration without endangering the other product
        # this threshold defines the critical period where we will check if swapping is necessary
        critical-time-threshold-for-swapping-millis = 2000
        # threshold that determines if the kitchen will go into suspended state or not. 0 means overflow is empty, 1 means it is full.
        overflow-utilization-safety-threshold = 0.9

        overflow-utilization-reporting-threshold = 0.5
        max-courier-assignment-cache-size = 200
        shelf-life-optimization-timer-delay-millis = 1000

        shelf {
            hot-shelf-capacity = 10
            cold-shelf-capacity = 10
            frozen-shelf-capacity = 10
            overflow-shelf-capacity = 15

            hot-shelf-decay-modifier = 1
            cold-shelf-decay-modifier = 1
            frozen-shelf-decay-modifier = 1
            overflow-shelf-decay-modifier = 2
        }
    }
    dispatcher{
        # triggers recruiting additional couriers if the ratio of available to existing couriers are below this threshold
        minimum-available-to-recruited-couriers-ratio = 0.15
        number-of-couriers-to-recruit-in-batches = 10
        # if this is too low, you will have more orders discarded due to NoCourierAvailable.
        max-number-of-couriers = 30

        courier {
            # earliest courier can delivery the product upon receiving delivery order
            earliest-delivery-after-order-received-millis = 2000
            # duration between earliest expected delivery time and latest expected delivery time
            delivery-time-window-millis = 4000
        }
    }
}